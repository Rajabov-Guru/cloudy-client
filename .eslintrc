{
    "extends": [
        // By extending from a plugin config, we can get recommended rules without having to add them manually.
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:import/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:@typescript-eslint/recommended",
        // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
        // Make sure it's always the last config, so it gets the chance to override other configs.
        "eslint-config-prettier"
    ],
    "settings": {
        "react": {
            // Tells eslint-plugin-react to automatically detect the version of React to use.
            "version": "detect"
        },
        // Tells eslint how to resolve imports
        "import/resolver": {
            "node": {
                "paths": [
                    "src"
                ],
                "extensions": [
                    ".js", ".jsx", ".ts", ".tsx"
                ]
            }
        }
    },
    "rules": {
        "react/jsx-curly-brace-presence": ["error", "never"],
        "react/jsx-no-duplicate-props": ["error"],
        "react/jsx-no-useless-fragment": ["error"],
        "react/no-unknown-property": ["error"],
        "react/no-unescaped-entities": [0],
        "@typescript-eslint/no-invalid-void-type": [0],
        "@typescript-eslint/consistent-type-definitions": [0],
        "react/react-in-jsx-scope": [0],
        "jsx-a11y/click-events-have-key-events": [0],
        "import/named": [0]
    }
}